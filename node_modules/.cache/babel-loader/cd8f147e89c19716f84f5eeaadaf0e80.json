{"ast":null,"code":"var _jsxFileName = \"/home/niveus/Desktop/others/viso/viso_netconf_fe/src/components/ExistingCons.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExistingCons = () => {\n  _s();\n\n  const [connames, setconnames] = useState([]);\n  const [staticIp, setStaticIp] = useState({\n    network_id_1: 0,\n    network_id_2: 0,\n    network_id_3: 0,\n    host_id: 0\n  });\n  const [gatewayIp, setGatewayIp] = useState({\n    network_id_1: 0,\n    network_id_2: 0,\n    network_id_3: 0,\n    host_id: 0\n  });\n  const [addConnameAndSubnet, setAddConnameAndSubnet] = useState({\n    con_name: \"\",\n    subnet_mask: 0\n  });\n  const [selectedConname, setSelectedConname] = useState(\"\");\n\n  const fetchConNames = async () => {\n    try {\n      var _data$data, _data$data$data, _data$data$data$conNa, _data$data2, _data$data2$data;\n\n      const data = await axios.get(\"http://192.168.1.53:3000/staticIp/fetchConNames\");\n      const cnames = data !== null && data !== void 0 && (_data$data = data.data) !== null && _data$data !== void 0 && (_data$data$data = _data$data.data) !== null && _data$data$data !== void 0 && (_data$data$data$conNa = _data$data$data.conNames) !== null && _data$data$data$conNa !== void 0 && _data$data$data$conNa.length ? data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : (_data$data2$data = _data$data2.data) === null || _data$data2$data === void 0 ? void 0 : _data$data2$data.conNames : [];\n\n      if (cnames !== null && cnames !== void 0 && cnames.length) {\n        let conames = cnames;\n        conames.splice(conames.indexOf(\"VISO_DHCP\"), 1);\n        conames = [\"Select Network\", ...conames];\n        setconnames(conames);\n      } else {\n        setconnames([\"No Network Found\"]);\n      }\n    } catch (e) {\n      setconnames([\"No Network Found\"]);\n    }\n  };\n\n  const handleChange1 = e => {\n    var _e$target;\n\n    setSelectedConname(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n\n  const handleAddConnameAndSubnet = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    setAddConnameAndSubnet(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  };\n\n  const handleStaticIp = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    setStaticIp(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  };\n\n  const handleGatewayIp = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    setGatewayIp(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  };\n\n  const setNetwork = async () => {\n    try {\n      await axios.post(\"http://192.168.1.53:3000/staticIp/activateCon\", {\n        conName: selectedConname\n      });\n    } catch (e) {\n      alert(`FAILED TO SET CONNECTION ${setSelectedConname}`);\n    }\n  };\n\n  const addNetwork = async e => {\n    e.preventDefault();\n\n    try {\n      const data = {\n        \"con_name\": addConnameAndSubnet.con_name,\n        \"static_ip\": staticIp,\n        \"subnet_mask\": addConnameAndSubnet.subnet_mask,\n        \"gateway_ip\": gatewayIp\n      };\n      await axios.post(\"http://192.168.1.53:3000/staticIp/setStaticIp\", data);\n    } catch (e) {\n      alert(\"FAILED TO ADD NETWORK\");\n    }\n  };\n\n  const activateDHCP = async () => {\n    try {\n      await axios.post(\"http://192.168.1.53:3000/dhcp/activateDhcp\");\n    } catch (e) {\n      alert(\"FAILED TO ACTIVATE DHCP\");\n    }\n  };\n\n  useState(() => {\n    fetchConNames();\n  }, 10000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Set Static IP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange1,\n      children: connames.map(c => [\"Select Network\", \"No Network Found\"].includes(c) ? /*#__PURE__*/_jsxDEV(\"option\", {\n        value: c,\n        disabled: true,\n        children: c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 77\n      }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: c,\n        children: c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 118\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setNetwork,\n      children: \"Set Network\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add Static IP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNetwork,\n      children: [\"Enter Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"string\",\n        name: \"con_name\",\n        value: addConnameAndSubnet.con_name,\n        onChange: handleAddConnameAndSubnet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 136\n      }, this), \"Enter Subnet Mask: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"subnet_mask\",\n        value: addConnameAndSubnet.subnet_mask,\n        min: 0,\n        max: 24,\n        onChange: handleAddConnameAndSubnet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 166\n      }, this), \"Enter Static IP: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 10,\n        max: 299,\n        name: \"network_id_1\",\n        value: staticIp.network_id_1,\n        onChange: handleStaticIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: 299,\n        name: \"network_id_2\",\n        value: staticIp.network_id_2,\n        onChange: handleStaticIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: 299,\n        name: \"network_id_3\",\n        value: staticIp.network_id_3,\n        onChange: handleStaticIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: 299,\n        name: \"host_id\",\n        value: staticIp.host_id,\n        onChange: handleStaticIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 118\n      }, this), \"Enter Gateway IP: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 10,\n        max: 299,\n        name: \"network_id_1\",\n        value: gatewayIp.network_id_1,\n        onChange: handleGatewayIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: 299,\n        name: \"network_id_2\",\n        value: gatewayIp.network_id_2,\n        onChange: handleGatewayIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: 299,\n        name: \"network_id_3\",\n        value: gatewayIp.network_id_3,\n        onChange: handleGatewayIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 0,\n        max: 299,\n        name: \"host_id\",\n        value: gatewayIp.host_id,\n        onChange: handleGatewayIp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 120\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: addNetwork,\n        children: \"Add Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Set DHCP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: activateDHCP,\n      children: \"Activate DHCP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExistingCons, \"LbO3xp5TEey/BeVemce1ugOnt6o=\");\n\n_c = ExistingCons;\nexport default ExistingCons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingCons\");","map":{"version":3,"sources":["/home/niveus/Desktop/others/viso/viso_netconf_fe/src/components/ExistingCons.tsx"],"names":["axios","useState","ExistingCons","connames","setconnames","staticIp","setStaticIp","network_id_1","network_id_2","network_id_3","host_id","gatewayIp","setGatewayIp","addConnameAndSubnet","setAddConnameAndSubnet","con_name","subnet_mask","selectedConname","setSelectedConname","fetchConNames","data","get","cnames","conNames","length","conames","splice","indexOf","e","handleChange1","target","value","handleAddConnameAndSubnet","preventDefault","name","prevFormData","handleStaticIp","handleGatewayIp","setNetwork","post","conName","alert","addNetwork","activateDHCP","map","c","includes"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { staticIp, ipAddress } from \"../types/common\";\n\nconst ExistingCons = () => {\n  \n  const [connames, setconnames] = useState<string[]>([])\n  const [staticIp, setStaticIp] = useState<ipAddress>({network_id_1: 0, network_id_2: 0, network_id_3: 0,host_id: 0})\n  const [gatewayIp, setGatewayIp] = useState<ipAddress>({network_id_1: 0, network_id_2: 0, network_id_3: 0,host_id: 0})\n  const [addConnameAndSubnet, setAddConnameAndSubnet] = useState<{con_name: string, subnet_mask: number}>({con_name: \"\", subnet_mask: 0})\n  const [selectedConname, setSelectedConname] = useState<string>(\"\")\n\n  const fetchConNames = async() =>{\n    try {\n      const data = await axios.get(\"http://192.168.1.53:3000/staticIp/fetchConNames\")\n      const cnames = data?.data?.data?.conNames?.length ? data?.data?.data?.conNames : []\n      if(cnames?.length){\n        let conames = cnames\n        conames.splice(conames.indexOf(\"VISO_DHCP\"), 1)\n        conames = [\"Select Network\", ...conames]\n        setconnames(conames)\n      }\n      else{\n        setconnames([\"No Network Found\"])\n      }\n    }\n    catch(e){\n      setconnames([\"No Network Found\"])\n    }\n  }\n\n  const handleChange1=(e: any)=>{\n    setSelectedConname(e?.target?.value)\n  }\n\n  const handleAddConnameAndSubnet=(e: any)=>{\n    e.preventDefault();\n    const { name, value } = e.target;\n    setAddConnameAndSubnet((prevFormData) => ({ ...prevFormData, [name]: value }));\n  }\n\n  const handleStaticIp=(e: any)=>{\n    e.preventDefault();\n    const { name, value } = e.target;\n    setStaticIp((prevFormData) => ({ ...prevFormData, [name]: value }));\n  }\n\n  const handleGatewayIp=(e: any)=>{\n    e.preventDefault();\n    const { name, value } = e.target;\n    setGatewayIp((prevFormData) => ({ ...prevFormData, [name]: value }));\n  }\n\n  const setNetwork = async()=>{\n    try{\n      await axios.post(\n        \"http://192.168.1.53:3000/staticIp/activateCon\",\n        {\n          conName: selectedConname\n        }\n      )\n    }\n    catch(e){\n      alert(`FAILED TO SET CONNECTION ${setSelectedConname}`)\n    }\n  }\n\n  const addNetwork = async(e: any)=>{\n    e.preventDefault()\n    try{\n      const data: staticIp = {\n        \"con_name\": addConnameAndSubnet.con_name,\n        \"static_ip\": staticIp,\n        \"subnet_mask\": addConnameAndSubnet.subnet_mask,\n        \"gateway_ip\": gatewayIp\n      }\n      await axios.post(\n        \"http://192.168.1.53:3000/staticIp/setStaticIp\",\n        data\n      )\n    }\n    catch(e){\n      alert(\"FAILED TO ADD NETWORK\")\n    }\n  }\n\n  const activateDHCP=async()=>{\n    try{\n      await axios.post(\n        \"http://192.168.1.53:3000/dhcp/activateDhcp\"\n      )\n    }\n    catch(e){\n      alert(\"FAILED TO ACTIVATE DHCP\")\n    }\n  }\n\n  useState(()=>{\n    fetchConNames()\n  }, 10000)\n\n  return (\n  <>\n\n  <h4>Set Static IP</h4>\n  <select onChange={handleChange1}>\n    {\n      connames.map(c=> [\"Select Network\", \"No Network Found\"].includes(c) ? <option value={c} disabled>{c}</option>: <option value={c}>{c}</option>)\n    }\n  </select><br/>\n  <button onClick={setNetwork}>Set Network</button>\n\n  <h4>Add Static IP</h4>\n  <form onSubmit={addNetwork}> \n    Enter Name: <input type=\"string\" name=\"con_name\" value={addConnameAndSubnet.con_name} onChange={handleAddConnameAndSubnet}></input><br/>\n    Enter Subnet Mask: <input type=\"number\" name=\"subnet_mask\" value={addConnameAndSubnet.subnet_mask} min={0} max={24} onChange={handleAddConnameAndSubnet}></input><br/>\n    Enter Static IP: <input type=\"number\" min={10} max={299} name=\"network_id_1\" value={staticIp.network_id_1} onChange={handleStaticIp}></input>\n    <input type=\"number\" min={0} max={299} name=\"network_id_2\" value={staticIp.network_id_2} onChange={handleStaticIp}></input>\n    <input type=\"number\" min={0} max={299} name=\"network_id_3\" value={staticIp.network_id_3} onChange={handleStaticIp}></input>\n    <input type=\"number\" min={0} max={299} name=\"host_id\" value={staticIp.host_id} onChange={handleStaticIp}></input><br/>\n    Enter Gateway IP: <input type=\"number\" min={10} max={299} name=\"network_id_1\" value={gatewayIp.network_id_1} onChange={handleGatewayIp}></input>\n    <input type=\"number\" min={0} max={299} name=\"network_id_2\" value={gatewayIp.network_id_2} onChange={handleGatewayIp}></input>\n    <input type=\"number\" min={0} max={299} name=\"network_id_3\" value={gatewayIp.network_id_3} onChange={handleGatewayIp}></input>\n    <input type=\"number\" min={0} max={299} name=\"host_id\" value={gatewayIp.host_id} onChange={handleGatewayIp}></input><br/>\n    <button type=\"submit\" onClick={addNetwork}>Add Network</button>\n  </form>\n\n  <h4>Set DHCP</h4>\n  <button onClick={activateDHCP}>Activate DHCP</button>\n\n  </>\n  );\n};\n  \nexport default ExistingCons;\n  "]},"metadata":{},"sourceType":"module"}